import{d as M,K as B,L as V,k as f,M as E,u as T,h as N,t as r,N as j,r as H,y as P,o as i,c as u,a as m,l as p,A as h,b as a,F as O,H as R,C as z,f as F,D as x,z as D,i as U,O as K,e as Y,p as q,j as G,_ as Q}from"./index-CCTs9utp.js";import{B as W}from"./Breadcrumbs-Cgz29xMC.js";import{L as b}from"./utils-Dr2KXKdf.js";import{A as X}from"./AutomationEditor--b67dmOJ.js";import{M as Z}from"./Modal-DjLau_za.js";import"./index-BMSQkwth.js";const C=w=>(q("data-v-014fb397"),w=w(),G(),w),tt={class:"content"},et={class:"wrapper"},ot={class:"left"},at={key:0},nt=["onClick"],st=["aria-label"],it={key:1},lt=C(()=>a("hr",null,null,-1)),rt={class:"automation-editor"},ut={key:1,class:"no-selected"},dt=C(()=>a("p",null,"Insert a list of automation in JSON format.",-1)),ct={class:"two-wide"},mt=C(()=>a("hr",null,null,-1)),pt=M({__name:"PersonalAutomation",setup(w){const g=B.useLoading(V),$=f(null),n=f([]);let d="";E(async()=>{const e=g.show();await A(),d=JSON.stringify(n.value),$.value=await T,e.hide()});const l=f(null),_=f("New Automation"),k=(e,t=null,s=!0)=>{if(e=="New Automation"){r.warning("Automation must have a non-default name!");return}const c=g.show();fetch("/api/automation/add",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({data:{name:e,automation:t}})}).then(async o=>{let v=await N(o);v.success?(await A(),_.value="New Automation",s&&r.success("Successfully added automation: "+e),l.value=n.value[n.value.length-1]):r.error(v.data.error)}),c.hide()},J=e=>{const t=g.show();fetch(`/api/automation/${e}/delete`).then(async s=>{let c=await N(s);c.success?(r.success("Successfully deleted the automation!"),await A(),l.value=null):r.error(c.data.error)}),t.hide()},A=async()=>{await fetch("/api/my-automations").then(async e=>{let t=await N(e);t.success?n.value=t.data:r.error(t.data.error)}),d=JSON.stringify(n.value)},I=()=>{navigator.clipboard.writeText(JSON.stringify(n.value.map(e=>e.automation))),r.success("Copied all automation to clipboard!")},y=f(!1),S=f(""),L=()=>{const e=JSON.parse(S.value);for(const t of e){let s;t!=null&&(Array.isArray(t)?s=t[0].name.replace(" (1H)","").replace(" (2H)",""):s=t.name,k(s,t,!1))}r.info("Done importing automation!"),y.value=!1};return j(()=>{if(d!==JSON.stringify(n.value)&&!window.confirm("Do you really want to leave? you have unsaved changes!"))return!1}),window.addEventListener("beforeunload",e=>{d!==JSON.stringify(n.value)&&(window.confirm("Do you really want to leave? you have unsaved changes!"),e.preventDefault(),e.returnValue=!0)}),(e,t)=>{const s=H("font-awesome-icon"),c=P("tooltip");return i(),u(O,null,[m(W,{routes:[{path:"",text:"My Automation",isCurrent:!0}]},{default:p(()=>[h((i(),u("button",{onClick:t[0]||(t[0]=o=>y.value=!0),"aria-label":"Import a list of automation"},[m(s,{icon:["fas","arrow-right-to-bracket"]})])),[[c,"Import a list of automation"]]),h((i(),u("button",{onClick:t[1]||(t[1]=o=>I()),"aria-label":"Export all automations to your clipboard"},[m(s,{icon:["fas","arrow-right-from-bracket"]})])),[[c,"Export all automations to your clipboard"]])]),_:1}),a("div",tt,[a("div",et,[a("div",ot,[m(b,{title:"List"},{default:p(()=>[n.value&&n.value.length>0?(i(),u("ol",at,[(i(!0),u(O,null,R(n.value,(o,v)=>(i(),u("li",{key:v,class:z(["feature-button__container",{selected:o._id==l.value?._id}]),onClick:ft=>l.value=o},[a("p",{role:"button","aria-label":`Select automation: ${o.name} (${v})`},F(o.name),9,st)],10,nt))),128))])):(i(),u("p",it,"You do not have any personal automations."))]),_:1}),m(b,{title:"Add new automation"},{default:p(()=>[h(a("input",{type:"text","onUpdate:modelValue":t[2]||(t[2]=o=>_.value=o),id:"addnewautomation"},null,512),[[x,_.value]]),a("button",{class:"btn confirm",onClick:t[3]||(t[3]=o=>k(_.value))},"Add")]),_:1}),l.value?(i(),D(b,{key:0,title:"Delete automation"},{default:p(()=>[a("button",{class:"btn danger",onClick:t[4]||(t[4]=o=>J(l.value._id))},"Delete current automation")]),_:1})):U("",!0)]),lt,a("div",rt,[l.value?(i(),D(X,{data:l.value,"is-stand-alone":!0,key:l.value?._id.toString(),onSavedStandaloneData:t[5]||(t[5]=o=>K(d)?d.value=JSON.stringify(n.value):d=JSON.stringify(n.value))},null,8,["data"])):(i(),u("div",ut,"Select an automation to get started with editing it."))])])]),m(Z,{show:y.value,onClose:t[7]||(t[7]=o=>y.value=!1)},{header:p(()=>[Y("Import Automation")]),body:p(()=>[m(b,{title:"List of automation"},{default:p(()=>[dt,a("div",ct,[h(a("input",{type:"text","onUpdate:modelValue":t[6]||(t[6]=o=>S.value=o),id:"listofautomation",placeholder:"JSON"},null,512),[[x,S.value]]),a("button",{class:"btn confirm",onClick:L},"Import")])]),_:1}),mt]),_:1},8,["show"])],64)}}}),gt=Q(pt,[["__scopeId","data-v-014fb397"]]);export{gt as default};
